name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
 
env: 
    MONGO_URI: â€˜mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          continue-on-error: true
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3

          with:
              name: Mocha-Test-Result
              path: test-results.xml

    docker: 
      name: Containerization
      permissions: 
        packages: write
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        continue-on-error: true
        uses: actions/checkout@v4


      - name: Dockerhub Login
        continue-on-error: true
        uses: docker/login-action@v2.2.0
        with: 
          username: ${{ vars.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_PASSWORD}}

      - name: GHCR Login
        continue-on-error: true
        uses: docker/login-action@v2.2.0
        with: 
            registry: ghcr.io
            username: ${{ github.repository_owner}}
            password: ${{ secrets.GITHUB_TOKEN}}
      
      - name: set lower case owner name
        run: |
                 echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
                 OWNER: '${{ github.repository_owner }}'
      - name: Docker Build for Testing
        continue-on-error: true
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha}}

      - name: Docker Image testing
        continue-on-error: true
        run: | 
           docker images
           docker run --name solar-system-app -d \ 
                -p 3000:3000 \ 
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \ 
                ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP

            echo testing Image UTL using wget 
            wget -q -O - 127.0.0.1:3000/live | grep live 

      - name: CR Push
        continue-on-error: true
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
             ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha}}      
             ghcr.io/${{ env.OWNER_LC}}/solar-system:${{ github.sha}}   



    dev-deploy:
      if: contains(github.ref,'feature/')
      needs: docker
      environment:
         name: Development
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          continue-on-error: true
          uses: actions/checkout@v4


        - name: install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'
      
        # - name: Fetch Kube cluster detail 
        #   run: |
        #     kubectl version --short
        #     echo ---------------------------
        #     kubectl get nodes
            

    prod-deploy:
      if: github.ref == 'refs/heads/main'
      needs: docker
      environment:
         name: Production
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          continue-on-error: true
          uses: actions/checkout@v4


        - name: install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'
            
      
        # - name: Fetch Kube cluster detail 
        #   run: |
        #     kubectl version --short
        #     echo ---------------------------
        #     kubectl get nodes     
